apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus-example
  labels:
    application: quarkus
    component: native
spec:
  replicas: 1
  strategy:
    type: RollingUpdate # Or Recreate
    rollingUpdate:
      maxSurge: 1 # How many pod we can add at a time
      maxUnavailable: 0 # How many pod can be unavailable during the rolling
  selector:
    matchLabels:
      application: quarkus
      component: native
  template:
    metadata:
      labels:
        application: quarkus
        component: native
    spec:
      containers:
        - name: quarkus-example
          # Container image
          image: image-registry.openshift-image-registry.svc:5000/quarkus-example/quarkus-example:v1.0.0-native
          # List of ports to expose from the container
          ports:
            - containerPort: 8080
          # Container will be restarted if the probe fails
          livenessProbe:
            httpGet: # tcp/command
              path: /
              port: 8080
              httpHeaders:
                - name: Example-Header
                  value: Hello
            failureThreshold: 3 # Minimum consecutive failures for the probe to be considered failed after having succeeded
            successThreshold: 1 # Minimum consecutive successes for the probe to be considered successful after having failed
            initialDelaySeconds: 5 # Number of seconds after the container has started before liveness probes are initiated
            periodSeconds: 3 # How often (in seconds) to perform the probe
            timeoutSeconds: 1 # Number of seconds after which the probe times out
          # Container will be removed from service endpoints if the probe fails
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
          # Compute Resources required by this container
          # Cannot be updated (redeploy is required)
          resources:
            requests:
              memory: "32Mi"
              cpu: "200m"
            limits:
              memory: "64Mi"
              cpu: "250m"
